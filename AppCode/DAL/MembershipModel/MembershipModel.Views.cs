//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Data.Entity.Infrastructure.MappingViews;

[assembly: DbMappingViewCacheTypeAttribute(
    typeof(ProjectJKL.AppCode.DAL.MembershipModel.MembershipEntities),
    typeof(Edm_EntityMappingGeneratedViews.ViewsForBaseEntitySetse69dffc9e8e6f5e03b530f62cae845456a14602e711ea873df28e6c93370208d))]

namespace Edm_EntityMappingGeneratedViews
{
    using System;
    using System.CodeDom.Compiler;
    using System.Data.Entity.Core.Metadata.Edm;

    /// <summary>
    /// Implements a mapping view cache.
    /// </summary>
    [GeneratedCode("Entity Framework Power Tools", "0.9.0.0")]
    internal sealed class ViewsForBaseEntitySetse69dffc9e8e6f5e03b530f62cae845456a14602e711ea873df28e6c93370208d : DbMappingViewCache
    {
        /// <summary>
        /// Gets a hash value computed over the mapping closure.
        /// </summary>
        public override string MappingHashValue
        {
            get
            {
                return "e69dffc9e8e6f5e03b530f62cae845456a14602e711ea873df28e6c93370208d";
            }
        }

        /// <summary>
        /// Gets a view corresponding to the specified extent.
        /// </summary>
        /// <param name="extent">The extent.</param>
        /// <returns>The mapping view, or null if the extent is not associated with a mapping view.</returns>
        public override DbMappingView GetView(EntitySetBase extent)
        {
            if (extent == null)
            {
                throw new ArgumentNullException("extent");
            }

            var extentName = extent.EntityContainer.Name + "." + extent.Name;

            if (extentName == "MembershipModelStoreContainer.MS_EducationQualificationTypes")
            {
                return GetView0();
            }

            if (extentName == "MembershipModelStoreContainer.MS_UserAdresses")
            {
                return GetView1();
            }

            if (extentName == "MembershipModelStoreContainer.MS_UserCategories")
            {
                return GetView2();
            }

            if (extentName == "MembershipModelStoreContainer.MS_UserEducations")
            {
                return GetView3();
            }

            if (extentName == "MembershipModelStoreContainer.MS_Users")
            {
                return GetView4();
            }

            if (extentName == "MembershipModelStoreContainer.MS_UsersData")
            {
                return GetView5();
            }

            if (extentName == "MembershipModelStoreContainer.MS_UserWorks")
            {
                return GetView6();
            }

            if (extentName == "MembershipEntities.MS_EducationQualificationTypes")
            {
                return GetView7();
            }

            if (extentName == "MembershipEntities.MS_UserAdresses")
            {
                return GetView8();
            }

            if (extentName == "MembershipEntities.MS_UserCategories")
            {
                return GetView9();
            }

            if (extentName == "MembershipEntities.MS_UserEducations")
            {
                return GetView10();
            }

            if (extentName == "MembershipEntities.MS_Users")
            {
                return GetView11();
            }

            if (extentName == "MembershipEntities.MS_UsersData")
            {
                return GetView12();
            }

            if (extentName == "MembershipEntities.MS_UserWorks")
            {
                return GetView13();
            }

            return null;
        }

        /// <summary>
        /// Gets the view for MembershipModelStoreContainer.MS_EducationQualificationTypes.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView0()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing MS_EducationQualificationTypes
        [MembershipModel.Store.MS_EducationQualificationTypes](T1.[MS_EducationQualificationTypes.EducationQualificationTypeID], T1.[MS_EducationQualificationTypes.Title], T1.[MS_EducationQualificationTypes.Description], T1.[MS_EducationQualificationTypes.Hide])
    FROM (
        SELECT
            T.EducationQualificationTypeID AS [MS_EducationQualificationTypes.EducationQualificationTypeID],
            T.Title AS [MS_EducationQualificationTypes.Title],
            T.Description AS [MS_EducationQualificationTypes.Description],
            T.Hide AS [MS_EducationQualificationTypes.Hide],
            True AS _from0
        FROM MembershipEntities.MS_EducationQualificationTypes AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for MembershipModelStoreContainer.MS_UserAdresses.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView1()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing MS_UserAdresses
        [MembershipModel.Store.MS_UserAdresses](T1.[MS_UserAdresses.AddressID], T1.[MS_UserAdresses.Username], T1.[MS_UserAdresses.AddressCategory], T1.[MS_UserAdresses.StreetName], T1.[MS_UserAdresses.City], T1.[MS_UserAdresses.ZipCode], T1.[MS_UserAdresses.State], T1.[MS_UserAdresses.Country], T1.[MS_UserAdresses.Hide])
    FROM (
        SELECT
            T.AddressID AS [MS_UserAdresses.AddressID],
            T.Username AS [MS_UserAdresses.Username],
            T.AddressCategory AS [MS_UserAdresses.AddressCategory],
            T.StreetName AS [MS_UserAdresses.StreetName],
            T.City AS [MS_UserAdresses.City],
            T.ZipCode AS [MS_UserAdresses.ZipCode],
            T.State AS [MS_UserAdresses.State],
            T.Country AS [MS_UserAdresses.Country],
            T.Hide AS [MS_UserAdresses.Hide],
            True AS _from0
        FROM MembershipEntities.MS_UserAdresses AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for MembershipModelStoreContainer.MS_UserCategories.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView2()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing MS_UserCategories
        [MembershipModel.Store.MS_UserCategories](T1.[MS_UserCategories.UserCategoryID], T1.[MS_UserCategories.Title], T1.[MS_UserCategories.Description], T1.[MS_UserCategories.Hide])
    FROM (
        SELECT
            T.UserCategoryID AS [MS_UserCategories.UserCategoryID],
            T.Title AS [MS_UserCategories.Title],
            T.Description AS [MS_UserCategories.Description],
            T.Hide AS [MS_UserCategories.Hide],
            True AS _from0
        FROM MembershipEntities.MS_UserCategories AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for MembershipModelStoreContainer.MS_UserEducations.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView3()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing MS_UserEducations
        [MembershipModel.Store.MS_UserEducations](T1.[MS_UserEducations.EducationID], T1.[MS_UserEducations.Username], T1.[MS_UserEducations.InstituteName], T1.[MS_UserEducations.Stream], T1.[MS_UserEducations.StartDate], T1.[MS_UserEducations.EndDate], T1.[MS_UserEducations.EducationQualificationTypeID], T1.[MS_UserEducations.Hide])
    FROM (
        SELECT
            T.EducationID AS [MS_UserEducations.EducationID],
            T.Username AS [MS_UserEducations.Username],
            T.InstituteName AS [MS_UserEducations.InstituteName],
            T.Stream AS [MS_UserEducations.Stream],
            T.StartDate AS [MS_UserEducations.StartDate],
            T.EndDate AS [MS_UserEducations.EndDate],
            T.EducationQualificationTypeID AS [MS_UserEducations.EducationQualificationTypeID],
            T.Hide AS [MS_UserEducations.Hide],
            True AS _from0
        FROM MembershipEntities.MS_UserEducations AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for MembershipModelStoreContainer.MS_Users.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView4()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing MS_Users
        [MembershipModel.Store.MS_Users](T1.[MS_Users.Username], T1.[MS_Users.Name], T1.[MS_Users.Email], T1.[MS_Users.ProfilePic], T1.[MS_Users.SecurityQuestion], T1.[MS_Users.SecurityAnswer], T1.[MS_Users.DateOfBirth], T1.[MS_Users.Gender], T1.[MS_Users.UserRole], T1.[MS_Users.UserCategoryID], T1.[MS_Users.Hide])
    FROM (
        SELECT
            T.Username AS [MS_Users.Username],
            T.Name AS [MS_Users.Name],
            T.Email AS [MS_Users.Email],
            T.ProfilePic AS [MS_Users.ProfilePic],
            T.SecurityQuestion AS [MS_Users.SecurityQuestion],
            T.SecurityAnswer AS [MS_Users.SecurityAnswer],
            T.DateOfBirth AS [MS_Users.DateOfBirth],
            T.Gender AS [MS_Users.Gender],
            T.UserRole AS [MS_Users.UserRole],
            T.UserCategoryID AS [MS_Users.UserCategoryID],
            T.Hide AS [MS_Users.Hide],
            True AS _from0
        FROM MembershipEntities.MS_Users AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for MembershipModelStoreContainer.MS_UsersData.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView5()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing MS_UsersData
        [MembershipModel.Store.MS_UsersData](T1.[MS_UsersData.UserDataID], T1.[MS_UsersData.Username], T1.[MS_UsersData.UsersDataCategory], T1.[MS_UsersData.UserData], T1.[MS_UsersData.Hide])
    FROM (
        SELECT
            T.UserDataID AS [MS_UsersData.UserDataID],
            T.Username AS [MS_UsersData.Username],
            T.UsersDataCategory AS [MS_UsersData.UsersDataCategory],
            T.UserData AS [MS_UsersData.UserData],
            T.Hide AS [MS_UsersData.Hide],
            True AS _from0
        FROM MembershipEntities.MS_UsersData AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for MembershipModelStoreContainer.MS_UserWorks.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView6()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing MS_UserWorks
        [MembershipModel.Store.MS_UserWorks](T1.[MS_UserWorks.WorkID], T1.[MS_UserWorks.Username], T1.[MS_UserWorks.Organization], T1.[MS_UserWorks.Position], T1.[MS_UserWorks.City], T1.[MS_UserWorks.Country], T1.[MS_UserWorks.Description], T1.[MS_UserWorks.WorkHere], T1.[MS_UserWorks.StartDate], T1.[MS_UserWorks.EndDate], T1.[MS_UserWorks.Hide])
    FROM (
        SELECT
            T.WorkID AS [MS_UserWorks.WorkID],
            T.Username AS [MS_UserWorks.Username],
            T.Organization AS [MS_UserWorks.Organization],
            T.Position AS [MS_UserWorks.Position],
            T.City AS [MS_UserWorks.City],
            T.Country AS [MS_UserWorks.Country],
            T.Description AS [MS_UserWorks.Description],
            T.WorkHere AS [MS_UserWorks.WorkHere],
            T.StartDate AS [MS_UserWorks.StartDate],
            T.EndDate AS [MS_UserWorks.EndDate],
            T.Hide AS [MS_UserWorks.Hide],
            True AS _from0
        FROM MembershipEntities.MS_UserWorks AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for MembershipEntities.MS_EducationQualificationTypes.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView7()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing MS_EducationQualificationTypes
        [MembershipModel.MS_EducationQualificationTypes](T1.[MS_EducationQualificationTypes.EducationQualificationTypeID], T1.[MS_EducationQualificationTypes.Title], T1.[MS_EducationQualificationTypes.Description], T1.[MS_EducationQualificationTypes.Hide])
    FROM (
        SELECT
            T.EducationQualificationTypeID AS [MS_EducationQualificationTypes.EducationQualificationTypeID],
            T.Title AS [MS_EducationQualificationTypes.Title],
            T.Description AS [MS_EducationQualificationTypes.Description],
            T.Hide AS [MS_EducationQualificationTypes.Hide],
            True AS _from0
        FROM MembershipModelStoreContainer.MS_EducationQualificationTypes AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for MembershipEntities.MS_UserAdresses.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView8()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing MS_UserAdresses
        [MembershipModel.MS_UserAdresses](T1.[MS_UserAdresses.AddressID], T1.[MS_UserAdresses.Username], T1.[MS_UserAdresses.AddressCategory], T1.[MS_UserAdresses.StreetName], T1.[MS_UserAdresses.City], T1.[MS_UserAdresses.ZipCode], T1.[MS_UserAdresses.State], T1.[MS_UserAdresses.Country], T1.[MS_UserAdresses.Hide])
    FROM (
        SELECT
            T.AddressID AS [MS_UserAdresses.AddressID],
            T.Username AS [MS_UserAdresses.Username],
            T.AddressCategory AS [MS_UserAdresses.AddressCategory],
            T.StreetName AS [MS_UserAdresses.StreetName],
            T.City AS [MS_UserAdresses.City],
            T.ZipCode AS [MS_UserAdresses.ZipCode],
            T.State AS [MS_UserAdresses.State],
            T.Country AS [MS_UserAdresses.Country],
            T.Hide AS [MS_UserAdresses.Hide],
            True AS _from0
        FROM MembershipModelStoreContainer.MS_UserAdresses AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for MembershipEntities.MS_UserCategories.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView9()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing MS_UserCategories
        [MembershipModel.MS_UserCategories](T1.[MS_UserCategories.UserCategoryID], T1.[MS_UserCategories.Title], T1.[MS_UserCategories.Description], T1.[MS_UserCategories.Hide])
    FROM (
        SELECT
            T.UserCategoryID AS [MS_UserCategories.UserCategoryID],
            T.Title AS [MS_UserCategories.Title],
            T.Description AS [MS_UserCategories.Description],
            T.Hide AS [MS_UserCategories.Hide],
            True AS _from0
        FROM MembershipModelStoreContainer.MS_UserCategories AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for MembershipEntities.MS_UserEducations.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView10()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing MS_UserEducations
        [MembershipModel.MS_UserEducations](T1.[MS_UserEducations.EducationID], T1.[MS_UserEducations.Username], T1.[MS_UserEducations.InstituteName], T1.[MS_UserEducations.Stream], T1.[MS_UserEducations.StartDate], T1.[MS_UserEducations.EndDate], T1.[MS_UserEducations.EducationQualificationTypeID], T1.[MS_UserEducations.Hide])
    FROM (
        SELECT
            T.EducationID AS [MS_UserEducations.EducationID],
            T.Username AS [MS_UserEducations.Username],
            T.InstituteName AS [MS_UserEducations.InstituteName],
            T.Stream AS [MS_UserEducations.Stream],
            T.StartDate AS [MS_UserEducations.StartDate],
            T.EndDate AS [MS_UserEducations.EndDate],
            T.EducationQualificationTypeID AS [MS_UserEducations.EducationQualificationTypeID],
            T.Hide AS [MS_UserEducations.Hide],
            True AS _from0
        FROM MembershipModelStoreContainer.MS_UserEducations AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for MembershipEntities.MS_Users.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView11()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing MS_Users
        [MembershipModel.MS_Users](T1.[MS_Users.Username], T1.[MS_Users.Name], T1.[MS_Users.Email], T1.[MS_Users.ProfilePic], T1.[MS_Users.SecurityQuestion], T1.[MS_Users.SecurityAnswer], T1.[MS_Users.DateOfBirth], T1.[MS_Users.Gender], T1.[MS_Users.UserRole], T1.[MS_Users.UserCategoryID], T1.[MS_Users.Hide])
    FROM (
        SELECT
            T.Username AS [MS_Users.Username],
            T.Name AS [MS_Users.Name],
            T.Email AS [MS_Users.Email],
            T.ProfilePic AS [MS_Users.ProfilePic],
            T.SecurityQuestion AS [MS_Users.SecurityQuestion],
            T.SecurityAnswer AS [MS_Users.SecurityAnswer],
            T.DateOfBirth AS [MS_Users.DateOfBirth],
            T.Gender AS [MS_Users.Gender],
            T.UserRole AS [MS_Users.UserRole],
            T.UserCategoryID AS [MS_Users.UserCategoryID],
            T.Hide AS [MS_Users.Hide],
            True AS _from0
        FROM MembershipModelStoreContainer.MS_Users AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for MembershipEntities.MS_UsersData.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView12()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing MS_UsersData
        [MembershipModel.MS_UsersData](T1.[MS_UsersData.UserDataID], T1.[MS_UsersData.Username], T1.[MS_UsersData.UsersDataCategory], T1.[MS_UsersData.UserData], T1.[MS_UsersData.Hide])
    FROM (
        SELECT
            T.UserDataID AS [MS_UsersData.UserDataID],
            T.Username AS [MS_UsersData.Username],
            T.UsersDataCategory AS [MS_UsersData.UsersDataCategory],
            T.UserData AS [MS_UsersData.UserData],
            T.Hide AS [MS_UsersData.Hide],
            True AS _from0
        FROM MembershipModelStoreContainer.MS_UsersData AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for MembershipEntities.MS_UserWorks.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView13()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing MS_UserWorks
        [MembershipModel.MS_UserWorks](T1.[MS_UserWorks.WorkID], T1.[MS_UserWorks.Username], T1.[MS_UserWorks.Organization], T1.[MS_UserWorks.Position], T1.[MS_UserWorks.City], T1.[MS_UserWorks.Country], T1.[MS_UserWorks.Description], T1.[MS_UserWorks.WorkHere], T1.[MS_UserWorks.StartDate], T1.[MS_UserWorks.EndDate], T1.[MS_UserWorks.Hide])
    FROM (
        SELECT
            T.WorkID AS [MS_UserWorks.WorkID],
            T.Username AS [MS_UserWorks.Username],
            T.Organization AS [MS_UserWorks.Organization],
            T.Position AS [MS_UserWorks.Position],
            T.City AS [MS_UserWorks.City],
            T.Country AS [MS_UserWorks.Country],
            T.Description AS [MS_UserWorks.Description],
            T.WorkHere AS [MS_UserWorks.WorkHere],
            T.StartDate AS [MS_UserWorks.StartDate],
            T.EndDate AS [MS_UserWorks.EndDate],
            T.Hide AS [MS_UserWorks.Hide],
            True AS _from0
        FROM MembershipModelStoreContainer.MS_UserWorks AS T
    ) AS T1");
        }
    }
}