//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Data.Entity.Infrastructure.MappingViews;

[assembly: DbMappingViewCacheTypeAttribute(
    typeof(ProjectJKL.AppCode.DAL.GalleryModel.GalleryEntities),
    typeof(Edm_EntityMappingGeneratedViews.ViewsForBaseEntitySets9e223d774b0b6c3f460674c6d23241b15fe05f5e9bef49a5c91c79fbb841ed8e))]

namespace Edm_EntityMappingGeneratedViews
{
    using System;
    using System.CodeDom.Compiler;
    using System.Data.Entity.Core.Metadata.Edm;

    /// <summary>
    /// Implements a mapping view cache.
    /// </summary>
    [GeneratedCode("Entity Framework Power Tools", "0.9.0.0")]
    internal sealed class ViewsForBaseEntitySets9e223d774b0b6c3f460674c6d23241b15fe05f5e9bef49a5c91c79fbb841ed8e : DbMappingViewCache
    {
        /// <summary>
        /// Gets a hash value computed over the mapping closure.
        /// </summary>
        public override string MappingHashValue
        {
            get { return "9e223d774b0b6c3f460674c6d23241b15fe05f5e9bef49a5c91c79fbb841ed8e"; }
        }

        /// <summary>
        /// Gets a view corresponding to the specified extent.
        /// </summary>
        /// <param name="extent">The extent.</param>
        /// <returns>The mapping view, or null if the extent is not associated with a mapping view.</returns>
        public override DbMappingView GetView(EntitySetBase extent)
        {
            if (extent == null)
            {
                throw new ArgumentNullException("extent");
            }

            var extentName = extent.EntityContainer.Name + "." + extent.Name;

            if (extentName == "GalleryModelStoreContainer.GY_Albums")
            {
                return GetView0();
            }

            if (extentName == "GalleryModelStoreContainer.GY_Events")
            {
                return GetView1();
            }

            if (extentName == "GalleryModelStoreContainer.GY_Photos")
            {
                return GetView2();
            }

            if (extentName == "GalleryEntities.GY_Albums")
            {
                return GetView3();
            }

            if (extentName == "GalleryEntities.GY_Events")
            {
                return GetView4();
            }

            if (extentName == "GalleryEntities.GY_Photos")
            {
                return GetView5();
            }

            if (extentName == "GalleryModelStoreContainer.GY_Audios")
            {
                return GetView6();
            }

            if (extentName == "GalleryModelStoreContainer.GY_AudioSet")
            {
                return GetView7();
            }

            if (extentName == "GalleryModelStoreContainer.GY_Drives")
            {
                return GetView8();
            }

            if (extentName == "GalleryModelStoreContainer.GY_Files")
            {
                return GetView9();
            }

            if (extentName == "GalleryModelStoreContainer.GY_FileTypes")
            {
                return GetView10();
            }

            if (extentName == "GalleryModelStoreContainer.GY_Folders")
            {
                return GetView11();
            }

            if (extentName == "GalleryModelStoreContainer.GY_Videos")
            {
                return GetView12();
            }

            if (extentName == "GalleryModelStoreContainer.GY_VideoSet")
            {
                return GetView13();
            }

            if (extentName == "GalleryModelStoreContainer.GY_AudioCategories")
            {
                return GetView14();
            }

            if (extentName == "GalleryModelStoreContainer.GY_VideoCategories")
            {
                return GetView15();
            }

            if (extentName == "GalleryEntities.GY_Audios")
            {
                return GetView16();
            }

            if (extentName == "GalleryEntities.GY_AudioSet")
            {
                return GetView17();
            }

            if (extentName == "GalleryEntities.GY_Drives")
            {
                return GetView18();
            }

            if (extentName == "GalleryEntities.GY_Files")
            {
                return GetView19();
            }

            if (extentName == "GalleryEntities.GY_FileTypes")
            {
                return GetView20();
            }

            if (extentName == "GalleryEntities.GY_Folders")
            {
                return GetView21();
            }

            if (extentName == "GalleryEntities.GY_Videos")
            {
                return GetView22();
            }

            if (extentName == "GalleryEntities.GY_VideoSet")
            {
                return GetView23();
            }

            if (extentName == "GalleryEntities.GY_AudioCategories")
            {
                return GetView24();
            }

            if (extentName == "GalleryEntities.GY_VideoCategories")
            {
                return GetView25();
            }

            if (extentName == "GalleryModelStoreContainer.GY_LayerProperties")
            {
                return GetView26();
            }

            if (extentName == "GalleryModelStoreContainer.GY_Layers")
            {
                return GetView27();
            }

            if (extentName == "GalleryModelStoreContainer.GY_SlideProperties")
            {
                return GetView28();
            }

            if (extentName == "GalleryModelStoreContainer.GY_Slides")
            {
                return GetView29();
            }

            if (extentName == "GalleryEntities.GY_LayerProperties")
            {
                return GetView30();
            }

            if (extentName == "GalleryEntities.GY_Layers")
            {
                return GetView31();
            }

            if (extentName == "GalleryEntities.GY_SlideProperties")
            {
                return GetView32();
            }

            if (extentName == "GalleryEntities.GY_Slides")
            {
                return GetView33();
            }

            return null;
        }

        /// <summary>
        /// Gets the view for GalleryModelStoreContainer.GY_Albums.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView0()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing GY_Albums
        [GalleryModel.Store.GY_Albums](T1.[GY_Albums.AlbumID], T1.[GY_Albums.Title], T1.[GY_Albums.Description], T1.[GY_Albums.Location], T1.[GY_Albums.TakenOn], T1.[GY_Albums.AddedOn], T1.[GY_Albums.Hide], T1.[GY_Albums.Tags], T1.[GY_Albums.EventID], T1.[GY_Albums.ImageID], T1.[GY_Albums.Locale])
    FROM (
        SELECT
            T.AlbumID AS [GY_Albums.AlbumID],
            T.Title AS [GY_Albums.Title],
            T.Description AS [GY_Albums.Description],
            T.Location AS [GY_Albums.Location],
            T.TakenOn AS [GY_Albums.TakenOn],
            T.AddedOn AS [GY_Albums.AddedOn],
            T.Hide AS [GY_Albums.Hide],
            T.Tags AS [GY_Albums.Tags],
            T.EventID AS [GY_Albums.EventID],
            T.ImageID AS [GY_Albums.ImageID],
            T.Locale AS [GY_Albums.Locale],
            True AS _from0
        FROM GalleryEntities.GY_Albums AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for GalleryModelStoreContainer.GY_Events.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView1()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing GY_Events
        [GalleryModel.Store.GY_Events](T1.[GY_Events.EventID], T1.[GY_Events.Title], T1.[GY_Events.SubTitle], T1.[GY_Events.Description], T1.[GY_Events.SubDescription], T1.[GY_Events.StartsOn], T1.[GY_Events.EndsOn], T1.[GY_Events.Location], T1.[GY_Events.Tags], T1.[GY_Events.Hide], T1.[GY_Events.EventTypeID], T1.[GY_Events.UseExternalForm], T1.[GY_Events.ExternalFormEmbedCode], T1.[GY_Events.ExternalFormURL], T1.[GY_Events.ExternalFormID], T1.[GY_Events.PopUpExternalForm], T1.[GY_Events.RegistrationStartDateTime], T1.[GY_Events.RegistrationEndDateTime], T1.[GY_Events.ImageID], T1.[GY_Events.Locale])
    FROM (
        SELECT
            T.EventID AS [GY_Events.EventID],
            T.Title AS [GY_Events.Title],
            T.SubTitle AS [GY_Events.SubTitle],
            T.Description AS [GY_Events.Description],
            T.SubDescription AS [GY_Events.SubDescription],
            T.StartsOn AS [GY_Events.StartsOn],
            T.EndsOn AS [GY_Events.EndsOn],
            T.Location AS [GY_Events.Location],
            T.Tags AS [GY_Events.Tags],
            T.Hide AS [GY_Events.Hide],
            T.EventTypeID AS [GY_Events.EventTypeID],
            T.UseExternalForm AS [GY_Events.UseExternalForm],
            T.ExternalFormEmbedCode AS [GY_Events.ExternalFormEmbedCode],
            T.ExternalFormURL AS [GY_Events.ExternalFormURL],
            T.ExternalFormID AS [GY_Events.ExternalFormID],
            T.PopUpExternalForm AS [GY_Events.PopUpExternalForm],
            T.RegistrationStartDateTime AS [GY_Events.RegistrationStartDateTime],
            T.RegistrationEndDateTime AS [GY_Events.RegistrationEndDateTime],
            T.ImageID AS [GY_Events.ImageID],
            T.Locale AS [GY_Events.Locale],
            True AS _from0
        FROM GalleryEntities.GY_Events AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for GalleryModelStoreContainer.GY_Photos.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView2()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing GY_Photos
        [GalleryModel.Store.GY_Photos](T1.[GY_Photos.PhotoID], T1.[GY_Photos.Title], T1.[GY_Photos.Description], T1.[GY_Photos.AlbumID], T1.[GY_Photos.Hide], T1.[GY_Photos.AddedOn], T1.[GY_Photos.TakenOn], T1.[GY_Photos.Location], T1.[GY_Photos.Tags], T1.[GY_Photos.ImageID], T1.[GY_Photos.Locale])
    FROM (
        SELECT
            T.PhotoID AS [GY_Photos.PhotoID],
            T.Title AS [GY_Photos.Title],
            T.Description AS [GY_Photos.Description],
            T.AlbumID AS [GY_Photos.AlbumID],
            T.Hide AS [GY_Photos.Hide],
            T.AddedOn AS [GY_Photos.AddedOn],
            T.TakenOn AS [GY_Photos.TakenOn],
            T.Location AS [GY_Photos.Location],
            T.Tags AS [GY_Photos.Tags],
            T.ImageID AS [GY_Photos.ImageID],
            T.Locale AS [GY_Photos.Locale],
            True AS _from0
        FROM GalleryEntities.GY_Photos AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for GalleryEntities.GY_Albums.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView3()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing GY_Albums
        [GalleryModel.GY_Albums](T1.[GY_Albums.AlbumID], T1.[GY_Albums.Title], T1.[GY_Albums.Description], T1.[GY_Albums.Location], T1.[GY_Albums.TakenOn], T1.[GY_Albums.AddedOn], T1.[GY_Albums.Hide], T1.[GY_Albums.Tags], T1.[GY_Albums.EventID], T1.[GY_Albums.ImageID], T1.[GY_Albums.Locale])
    FROM (
        SELECT
            T.AlbumID AS [GY_Albums.AlbumID],
            T.Title AS [GY_Albums.Title],
            T.Description AS [GY_Albums.Description],
            T.Location AS [GY_Albums.Location],
            T.TakenOn AS [GY_Albums.TakenOn],
            T.AddedOn AS [GY_Albums.AddedOn],
            T.Hide AS [GY_Albums.Hide],
            T.Tags AS [GY_Albums.Tags],
            T.EventID AS [GY_Albums.EventID],
            T.ImageID AS [GY_Albums.ImageID],
            T.Locale AS [GY_Albums.Locale],
            True AS _from0
        FROM GalleryModelStoreContainer.GY_Albums AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for GalleryEntities.GY_Events.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView4()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing GY_Events
        [GalleryModel.GY_Events](T1.[GY_Events.EventID], T1.[GY_Events.Title], T1.[GY_Events.SubTitle], T1.[GY_Events.Description], T1.[GY_Events.SubDescription], T1.[GY_Events.StartsOn], T1.[GY_Events.EndsOn], T1.[GY_Events.Location], T1.[GY_Events.Tags], T1.[GY_Events.Hide], T1.[GY_Events.EventTypeID], T1.[GY_Events.UseExternalForm], T1.[GY_Events.ExternalFormEmbedCode], T1.[GY_Events.ExternalFormURL], T1.[GY_Events.ExternalFormID], T1.[GY_Events.PopUpExternalForm], T1.[GY_Events.RegistrationStartDateTime], T1.[GY_Events.RegistrationEndDateTime], T1.[GY_Events.ImageID], T1.[GY_Events.Locale])
    FROM (
        SELECT
            T.EventID AS [GY_Events.EventID],
            T.Title AS [GY_Events.Title],
            T.SubTitle AS [GY_Events.SubTitle],
            T.Description AS [GY_Events.Description],
            T.SubDescription AS [GY_Events.SubDescription],
            T.StartsOn AS [GY_Events.StartsOn],
            T.EndsOn AS [GY_Events.EndsOn],
            T.Location AS [GY_Events.Location],
            T.Tags AS [GY_Events.Tags],
            T.Hide AS [GY_Events.Hide],
            T.EventTypeID AS [GY_Events.EventTypeID],
            T.UseExternalForm AS [GY_Events.UseExternalForm],
            T.ExternalFormEmbedCode AS [GY_Events.ExternalFormEmbedCode],
            T.ExternalFormURL AS [GY_Events.ExternalFormURL],
            T.ExternalFormID AS [GY_Events.ExternalFormID],
            T.PopUpExternalForm AS [GY_Events.PopUpExternalForm],
            T.RegistrationStartDateTime AS [GY_Events.RegistrationStartDateTime],
            T.RegistrationEndDateTime AS [GY_Events.RegistrationEndDateTime],
            T.ImageID AS [GY_Events.ImageID],
            T.Locale AS [GY_Events.Locale],
            True AS _from0
        FROM GalleryModelStoreContainer.GY_Events AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for GalleryEntities.GY_Photos.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView5()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing GY_Photos
        [GalleryModel.GY_Photos](T1.[GY_Photos.PhotoID], T1.[GY_Photos.Title], T1.[GY_Photos.Description], T1.[GY_Photos.AlbumID], T1.[GY_Photos.Hide], T1.[GY_Photos.AddedOn], T1.[GY_Photos.TakenOn], T1.[GY_Photos.Location], T1.[GY_Photos.Tags], T1.[GY_Photos.ImageID], T1.[GY_Photos.Locale])
    FROM (
        SELECT
            T.PhotoID AS [GY_Photos.PhotoID],
            T.Title AS [GY_Photos.Title],
            T.Description AS [GY_Photos.Description],
            T.AlbumID AS [GY_Photos.AlbumID],
            T.Hide AS [GY_Photos.Hide],
            T.AddedOn AS [GY_Photos.AddedOn],
            T.TakenOn AS [GY_Photos.TakenOn],
            T.Location AS [GY_Photos.Location],
            T.Tags AS [GY_Photos.Tags],
            T.ImageID AS [GY_Photos.ImageID],
            T.Locale AS [GY_Photos.Locale],
            True AS _from0
        FROM GalleryModelStoreContainer.GY_Photos AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for GalleryModelStoreContainer.GY_Audios.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView6()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing GY_Audios
        [GalleryModel.Store.GY_Audios](T1.[GY_Audios.AudioID], T1.[GY_Audios.Title], T1.[GY_Audios.Description], T1.[GY_Audios.Hide], T1.[GY_Audios.AddedOn], T1.[GY_Audios.TakenOn], T1.[GY_Audios.Tags], T1.[GY_Audios.Location], T1.[GY_Audios.AudioSetID], T1.[GY_Audios.AudioCategoryID], T1.[GY_Audios.LocalAudioURL], T1.[GY_Audios.WebAudioURL], T1.[GY_Audios.ShowWebAudio], T1.[GY_Audios.FileID], T1.[GY_Audios.Length], T1.[GY_Audios.LikesCount], T1.[GY_Audios.DislikesCount], T1.[GY_Audios.Locale])
    FROM (
        SELECT
            T.AudioID AS [GY_Audios.AudioID],
            T.Title AS [GY_Audios.Title],
            T.Description AS [GY_Audios.Description],
            T.Hide AS [GY_Audios.Hide],
            T.AddedOn AS [GY_Audios.AddedOn],
            T.TakenOn AS [GY_Audios.TakenOn],
            T.Tags AS [GY_Audios.Tags],
            T.Location AS [GY_Audios.Location],
            T.AudioSetID AS [GY_Audios.AudioSetID],
            T.AudioCategoryID AS [GY_Audios.AudioCategoryID],
            T.LocalAudioURL AS [GY_Audios.LocalAudioURL],
            T.WebAudioURL AS [GY_Audios.WebAudioURL],
            T.ShowWebAudio AS [GY_Audios.ShowWebAudio],
            T.FileID AS [GY_Audios.FileID],
            T.Length AS [GY_Audios.Length],
            T.LikesCount AS [GY_Audios.LikesCount],
            T.DislikesCount AS [GY_Audios.DislikesCount],
            T.Locale AS [GY_Audios.Locale],
            True AS _from0
        FROM GalleryEntities.GY_Audios AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for GalleryModelStoreContainer.GY_AudioSet.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView7()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing GY_AudioSet
        [GalleryModel.Store.GY_AudioSet](T1.[GY_AudioSet.AudioSetID], T1.[GY_AudioSet.Title], T1.[GY_AudioSet.Description], T1.[GY_AudioSet.Hide], T1.[GY_AudioSet.AddedOn], T1.[GY_AudioSet.TakenOn], T1.[GY_AudioSet.Tags], T1.[GY_AudioSet.Location], T1.[GY_AudioSet.AudioCategoryID], T1.[GY_AudioSet.ImageID], T1.[GY_AudioSet.Locale])
    FROM (
        SELECT
            T.AudioSetID AS [GY_AudioSet.AudioSetID],
            T.Title AS [GY_AudioSet.Title],
            T.Description AS [GY_AudioSet.Description],
            T.Hide AS [GY_AudioSet.Hide],
            T.AddedOn AS [GY_AudioSet.AddedOn],
            T.TakenOn AS [GY_AudioSet.TakenOn],
            T.Tags AS [GY_AudioSet.Tags],
            T.Location AS [GY_AudioSet.Location],
            T.AudioCategoryID AS [GY_AudioSet.AudioCategoryID],
            T.ImageID AS [GY_AudioSet.ImageID],
            T.Locale AS [GY_AudioSet.Locale],
            True AS _from0
        FROM GalleryEntities.GY_AudioSet AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for GalleryModelStoreContainer.GY_Drives.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView8()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing GY_Drives
        [GalleryModel.Store.GY_Drives](T1.[GY_Drives.DriveID], T1.[GY_Drives.Title], T1.[GY_Drives.Description], T1.[GY_Drives.Hide], T1.[GY_Drives.ImageID], T1.[GY_Drives.Locale])
    FROM (
        SELECT
            T.DriveID AS [GY_Drives.DriveID],
            T.Title AS [GY_Drives.Title],
            T.Description AS [GY_Drives.Description],
            T.Hide AS [GY_Drives.Hide],
            T.ImageID AS [GY_Drives.ImageID],
            T.Locale AS [GY_Drives.Locale],
            True AS _from0
        FROM GalleryEntities.GY_Drives AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for GalleryModelStoreContainer.GY_Files.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView9()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing GY_Files
        [GalleryModel.Store.GY_Files](T1.[GY_Files.FileID], T1.[GY_Files.Title], T1.[GY_Files.SubTitle], T1.[GY_Files.Hide], T1.[GY_Files.Description], T1.[GY_Files.FileURL], T1.[GY_Files.WebFileURL], T1.[GY_Files.ShowWebFile], T1.[GY_Files.FileName], T1.[GY_Files.Extension], T1.[GY_Files.Size], T1.[GY_Files.AddedOn], T1.[GY_Files.DownloadCount], T1.[GY_Files.Tags], T1.[GY_Files.FolderID], T1.[GY_Files.DriveID], T1.[GY_Files.FileTypeID], T1.[GY_Files.Date], T1.[GY_Files.ImageID], T1.[GY_Files.Locale])
    FROM (
        SELECT
            T.FileID AS [GY_Files.FileID],
            T.Title AS [GY_Files.Title],
            T.SubTitle AS [GY_Files.SubTitle],
            T.Hide AS [GY_Files.Hide],
            T.Description AS [GY_Files.Description],
            T.FileURL AS [GY_Files.FileURL],
            T.WebFileURL AS [GY_Files.WebFileURL],
            T.ShowWebFile AS [GY_Files.ShowWebFile],
            T.FileName AS [GY_Files.FileName],
            T.Extension AS [GY_Files.Extension],
            T.Size AS [GY_Files.Size],
            T.AddedOn AS [GY_Files.AddedOn],
            T.DownloadCount AS [GY_Files.DownloadCount],
            T.Tags AS [GY_Files.Tags],
            T.FolderID AS [GY_Files.FolderID],
            T.DriveID AS [GY_Files.DriveID],
            T.FileTypeID AS [GY_Files.FileTypeID],
            T.Date AS [GY_Files.Date],
            T.ImageID AS [GY_Files.ImageID],
            T.Locale AS [GY_Files.Locale],
            True AS _from0
        FROM GalleryEntities.GY_Files AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for GalleryModelStoreContainer.GY_FileTypes.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView10()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing GY_FileTypes
        [GalleryModel.Store.GY_FileTypes](T1.[GY_FileTypes.FileTypeID], T1.[GY_FileTypes.Title], T1.[GY_FileTypes.Description], T1.[GY_FileTypes.Hide])
    FROM (
        SELECT
            T.FileTypeID AS [GY_FileTypes.FileTypeID],
            T.Title AS [GY_FileTypes.Title],
            T.Description AS [GY_FileTypes.Description],
            T.Hide AS [GY_FileTypes.Hide],
            True AS _from0
        FROM GalleryEntities.GY_FileTypes AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for GalleryModelStoreContainer.GY_Folders.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView11()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing GY_Folders
        [GalleryModel.Store.GY_Folders](T1.[GY_Folders.FolderID], T1.[GY_Folders.Title], T1.[GY_Folders.Description], T1.[GY_Folders.Hide], T1.[GY_Folders.DriveID], T1.[GY_Folders.Tags], T1.[GY_Folders.AddedOn], T1.[GY_Folders.ParentFolderID], T1.[GY_Folders.ImageID], T1.[GY_Folders.Locale])
    FROM (
        SELECT
            T.FolderID AS [GY_Folders.FolderID],
            T.Title AS [GY_Folders.Title],
            T.Description AS [GY_Folders.Description],
            T.Hide AS [GY_Folders.Hide],
            T.DriveID AS [GY_Folders.DriveID],
            T.Tags AS [GY_Folders.Tags],
            T.AddedOn AS [GY_Folders.AddedOn],
            T.ParentFolderID AS [GY_Folders.ParentFolderID],
            T.ImageID AS [GY_Folders.ImageID],
            T.Locale AS [GY_Folders.Locale],
            True AS _from0
        FROM GalleryEntities.GY_Folders AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for GalleryModelStoreContainer.GY_Videos.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView12()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing GY_Videos
        [GalleryModel.Store.GY_Videos](T1.[GY_Videos.VideoID], T1.[GY_Videos.Title], T1.[GY_Videos.Description], T1.[GY_Videos.Hide], T1.[GY_Videos.AddedOn], T1.[GY_Videos.TakenOn], T1.[GY_Videos.Tags], T1.[GY_Videos.Location], T1.[GY_Videos.VideoSetID], T1.[GY_Videos.VideoCategoryID], T1.[GY_Videos.LocalVideoURL], T1.[GY_Videos.WebVideoURL], T1.[GY_Videos.ShowWebVideo], T1.[GY_Videos.FileID], T1.[GY_Videos.Length], T1.[GY_Videos.LikesCount], T1.[GY_Videos.DislikesCount], T1.[GY_Videos.ImageID], T1.[GY_Videos.Locale])
    FROM (
        SELECT
            T.VideoID AS [GY_Videos.VideoID],
            T.Title AS [GY_Videos.Title],
            T.Description AS [GY_Videos.Description],
            T.Hide AS [GY_Videos.Hide],
            T.AddedOn AS [GY_Videos.AddedOn],
            T.TakenOn AS [GY_Videos.TakenOn],
            T.Tags AS [GY_Videos.Tags],
            T.Location AS [GY_Videos.Location],
            T.VideoSetID AS [GY_Videos.VideoSetID],
            T.VideoCategoryID AS [GY_Videos.VideoCategoryID],
            T.LocalVideoURL AS [GY_Videos.LocalVideoURL],
            T.WebVideoURL AS [GY_Videos.WebVideoURL],
            T.ShowWebVideo AS [GY_Videos.ShowWebVideo],
            T.FileID AS [GY_Videos.FileID],
            T.Length AS [GY_Videos.Length],
            T.LikesCount AS [GY_Videos.LikesCount],
            T.DislikesCount AS [GY_Videos.DislikesCount],
            T.ImageID AS [GY_Videos.ImageID],
            T.Locale AS [GY_Videos.Locale],
            True AS _from0
        FROM GalleryEntities.GY_Videos AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for GalleryModelStoreContainer.GY_VideoSet.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView13()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing GY_VideoSet
        [GalleryModel.Store.GY_VideoSet](T1.[GY_VideoSet.VideoSetID], T1.[GY_VideoSet.Title], T1.[GY_VideoSet.Description], T1.[GY_VideoSet.Hide], T1.[GY_VideoSet.AddedOn], T1.[GY_VideoSet.TakenOn], T1.[GY_VideoSet.Tags], T1.[GY_VideoSet.Location], T1.[GY_VideoSet.VideoCategoryID], T1.[GY_VideoSet.ImageID], T1.[GY_VideoSet.Locale])
    FROM (
        SELECT
            T.VideoSetID AS [GY_VideoSet.VideoSetID],
            T.Title AS [GY_VideoSet.Title],
            T.Description AS [GY_VideoSet.Description],
            T.Hide AS [GY_VideoSet.Hide],
            T.AddedOn AS [GY_VideoSet.AddedOn],
            T.TakenOn AS [GY_VideoSet.TakenOn],
            T.Tags AS [GY_VideoSet.Tags],
            T.Location AS [GY_VideoSet.Location],
            T.VideoCategoryID AS [GY_VideoSet.VideoCategoryID],
            T.ImageID AS [GY_VideoSet.ImageID],
            T.Locale AS [GY_VideoSet.Locale],
            True AS _from0
        FROM GalleryEntities.GY_VideoSet AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for GalleryModelStoreContainer.GY_AudioCategories.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView14()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing GY_AudioCategories
        [GalleryModel.Store.GY_AudioCategories](T1.[GY_AudioCategories.AudioCategoryID], T1.[GY_AudioCategories.Title], T1.[GY_AudioCategories.Description], T1.[GY_AudioCategories.Hide], T1.[GY_AudioCategories.ImageID], T1.[GY_AudioCategories.Locale], T1.[GY_AudioCategories.ParentAudioCategoryID])
    FROM (
        SELECT
            T.AudioCategoryID AS [GY_AudioCategories.AudioCategoryID],
            T.Title AS [GY_AudioCategories.Title],
            T.Description AS [GY_AudioCategories.Description],
            T.Hide AS [GY_AudioCategories.Hide],
            T.ImageID AS [GY_AudioCategories.ImageID],
            T.Locale AS [GY_AudioCategories.Locale],
            T.ParentAudioCategoryID AS [GY_AudioCategories.ParentAudioCategoryID],
            True AS _from0
        FROM GalleryEntities.GY_AudioCategories AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for GalleryModelStoreContainer.GY_VideoCategories.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView15()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing GY_VideoCategories
        [GalleryModel.Store.GY_VideoCategories](T1.[GY_VideoCategories.VideoCategoryID], T1.[GY_VideoCategories.Title], T1.[GY_VideoCategories.Description], T1.[GY_VideoCategories.Hide], T1.[GY_VideoCategories.ImageID], T1.[GY_VideoCategories.Locale], T1.[GY_VideoCategories.ParentVideoCategoryID])
    FROM (
        SELECT
            T.VideoCategoryID AS [GY_VideoCategories.VideoCategoryID],
            T.Title AS [GY_VideoCategories.Title],
            T.Description AS [GY_VideoCategories.Description],
            T.Hide AS [GY_VideoCategories.Hide],
            T.ImageID AS [GY_VideoCategories.ImageID],
            T.Locale AS [GY_VideoCategories.Locale],
            T.ParentVideoCategoryID AS [GY_VideoCategories.ParentVideoCategoryID],
            True AS _from0
        FROM GalleryEntities.GY_VideoCategories AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for GalleryEntities.GY_Audios.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView16()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing GY_Audios
        [GalleryModel.GY_Audios](T1.[GY_Audios.AudioID], T1.[GY_Audios.Title], T1.[GY_Audios.Description], T1.[GY_Audios.Hide], T1.[GY_Audios.AddedOn], T1.[GY_Audios.TakenOn], T1.[GY_Audios.Tags], T1.[GY_Audios.Location], T1.[GY_Audios.AudioSetID], T1.[GY_Audios.AudioCategoryID], T1.[GY_Audios.LocalAudioURL], T1.[GY_Audios.WebAudioURL], T1.[GY_Audios.ShowWebAudio], T1.[GY_Audios.FileID], T1.[GY_Audios.Length], T1.[GY_Audios.LikesCount], T1.[GY_Audios.DislikesCount], T1.[GY_Audios.Locale])
    FROM (
        SELECT
            T.AudioID AS [GY_Audios.AudioID],
            T.Title AS [GY_Audios.Title],
            T.Description AS [GY_Audios.Description],
            T.Hide AS [GY_Audios.Hide],
            T.AddedOn AS [GY_Audios.AddedOn],
            T.TakenOn AS [GY_Audios.TakenOn],
            T.Tags AS [GY_Audios.Tags],
            T.Location AS [GY_Audios.Location],
            T.AudioSetID AS [GY_Audios.AudioSetID],
            T.AudioCategoryID AS [GY_Audios.AudioCategoryID],
            T.LocalAudioURL AS [GY_Audios.LocalAudioURL],
            T.WebAudioURL AS [GY_Audios.WebAudioURL],
            T.ShowWebAudio AS [GY_Audios.ShowWebAudio],
            T.FileID AS [GY_Audios.FileID],
            T.Length AS [GY_Audios.Length],
            T.LikesCount AS [GY_Audios.LikesCount],
            T.DislikesCount AS [GY_Audios.DislikesCount],
            T.Locale AS [GY_Audios.Locale],
            True AS _from0
        FROM GalleryModelStoreContainer.GY_Audios AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for GalleryEntities.GY_AudioSet.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView17()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing GY_AudioSet
        [GalleryModel.GY_AudioSet](T1.[GY_AudioSet.AudioSetID], T1.[GY_AudioSet.Title], T1.[GY_AudioSet.Description], T1.[GY_AudioSet.Hide], T1.[GY_AudioSet.AddedOn], T1.[GY_AudioSet.TakenOn], T1.[GY_AudioSet.Tags], T1.[GY_AudioSet.Location], T1.[GY_AudioSet.AudioCategoryID], T1.[GY_AudioSet.ImageID], T1.[GY_AudioSet.Locale])
    FROM (
        SELECT
            T.AudioSetID AS [GY_AudioSet.AudioSetID],
            T.Title AS [GY_AudioSet.Title],
            T.Description AS [GY_AudioSet.Description],
            T.Hide AS [GY_AudioSet.Hide],
            T.AddedOn AS [GY_AudioSet.AddedOn],
            T.TakenOn AS [GY_AudioSet.TakenOn],
            T.Tags AS [GY_AudioSet.Tags],
            T.Location AS [GY_AudioSet.Location],
            T.AudioCategoryID AS [GY_AudioSet.AudioCategoryID],
            T.ImageID AS [GY_AudioSet.ImageID],
            T.Locale AS [GY_AudioSet.Locale],
            True AS _from0
        FROM GalleryModelStoreContainer.GY_AudioSet AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for GalleryEntities.GY_Drives.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView18()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing GY_Drives
        [GalleryModel.GY_Drives](T1.[GY_Drives.DriveID], T1.[GY_Drives.Title], T1.[GY_Drives.Description], T1.[GY_Drives.Hide], T1.[GY_Drives.ImageID], T1.[GY_Drives.Locale])
    FROM (
        SELECT
            T.DriveID AS [GY_Drives.DriveID],
            T.Title AS [GY_Drives.Title],
            T.Description AS [GY_Drives.Description],
            T.Hide AS [GY_Drives.Hide],
            T.ImageID AS [GY_Drives.ImageID],
            T.Locale AS [GY_Drives.Locale],
            True AS _from0
        FROM GalleryModelStoreContainer.GY_Drives AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for GalleryEntities.GY_Files.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView19()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing GY_Files
        [GalleryModel.GY_Files](T1.[GY_Files.FileID], T1.[GY_Files.Title], T1.[GY_Files.SubTitle], T1.[GY_Files.Hide], T1.[GY_Files.Description], T1.[GY_Files.FileURL], T1.[GY_Files.WebFileURL], T1.[GY_Files.ShowWebFile], T1.[GY_Files.FileName], T1.[GY_Files.Extension], T1.[GY_Files.Size], T1.[GY_Files.AddedOn], T1.[GY_Files.DownloadCount], T1.[GY_Files.Tags], T1.[GY_Files.FolderID], T1.[GY_Files.DriveID], T1.[GY_Files.FileTypeID], T1.[GY_Files.Date], T1.[GY_Files.ImageID], T1.[GY_Files.Locale])
    FROM (
        SELECT
            T.FileID AS [GY_Files.FileID],
            T.Title AS [GY_Files.Title],
            T.SubTitle AS [GY_Files.SubTitle],
            T.Hide AS [GY_Files.Hide],
            T.Description AS [GY_Files.Description],
            T.FileURL AS [GY_Files.FileURL],
            T.WebFileURL AS [GY_Files.WebFileURL],
            T.ShowWebFile AS [GY_Files.ShowWebFile],
            T.FileName AS [GY_Files.FileName],
            T.Extension AS [GY_Files.Extension],
            T.Size AS [GY_Files.Size],
            T.AddedOn AS [GY_Files.AddedOn],
            T.DownloadCount AS [GY_Files.DownloadCount],
            T.Tags AS [GY_Files.Tags],
            T.FolderID AS [GY_Files.FolderID],
            T.DriveID AS [GY_Files.DriveID],
            T.FileTypeID AS [GY_Files.FileTypeID],
            T.Date AS [GY_Files.Date],
            T.ImageID AS [GY_Files.ImageID],
            T.Locale AS [GY_Files.Locale],
            True AS _from0
        FROM GalleryModelStoreContainer.GY_Files AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for GalleryEntities.GY_FileTypes.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView20()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing GY_FileTypes
        [GalleryModel.GY_FileTypes](T1.[GY_FileTypes.FileTypeID], T1.[GY_FileTypes.Title], T1.[GY_FileTypes.Description], T1.[GY_FileTypes.Hide])
    FROM (
        SELECT
            T.FileTypeID AS [GY_FileTypes.FileTypeID],
            T.Title AS [GY_FileTypes.Title],
            T.Description AS [GY_FileTypes.Description],
            T.Hide AS [GY_FileTypes.Hide],
            True AS _from0
        FROM GalleryModelStoreContainer.GY_FileTypes AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for GalleryEntities.GY_Folders.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView21()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing GY_Folders
        [GalleryModel.GY_Folders](T1.[GY_Folders.FolderID], T1.[GY_Folders.Title], T1.[GY_Folders.Description], T1.[GY_Folders.Hide], T1.[GY_Folders.DriveID], T1.[GY_Folders.Tags], T1.[GY_Folders.AddedOn], T1.[GY_Folders.ParentFolderID], T1.[GY_Folders.ImageID], T1.[GY_Folders.Locale])
    FROM (
        SELECT
            T.FolderID AS [GY_Folders.FolderID],
            T.Title AS [GY_Folders.Title],
            T.Description AS [GY_Folders.Description],
            T.Hide AS [GY_Folders.Hide],
            T.DriveID AS [GY_Folders.DriveID],
            T.Tags AS [GY_Folders.Tags],
            T.AddedOn AS [GY_Folders.AddedOn],
            T.ParentFolderID AS [GY_Folders.ParentFolderID],
            T.ImageID AS [GY_Folders.ImageID],
            T.Locale AS [GY_Folders.Locale],
            True AS _from0
        FROM GalleryModelStoreContainer.GY_Folders AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for GalleryEntities.GY_Videos.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView22()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing GY_Videos
        [GalleryModel.GY_Videos](T1.[GY_Videos.VideoID], T1.[GY_Videos.Title], T1.[GY_Videos.Description], T1.[GY_Videos.Hide], T1.[GY_Videos.AddedOn], T1.[GY_Videos.TakenOn], T1.[GY_Videos.Tags], T1.[GY_Videos.Location], T1.[GY_Videos.VideoSetID], T1.[GY_Videos.VideoCategoryID], T1.[GY_Videos.LocalVideoURL], T1.[GY_Videos.WebVideoURL], T1.[GY_Videos.ShowWebVideo], T1.[GY_Videos.FileID], T1.[GY_Videos.Length], T1.[GY_Videos.LikesCount], T1.[GY_Videos.DislikesCount], T1.[GY_Videos.ImageID], T1.[GY_Videos.Locale])
    FROM (
        SELECT
            T.VideoID AS [GY_Videos.VideoID],
            T.Title AS [GY_Videos.Title],
            T.Description AS [GY_Videos.Description],
            T.Hide AS [GY_Videos.Hide],
            T.AddedOn AS [GY_Videos.AddedOn],
            T.TakenOn AS [GY_Videos.TakenOn],
            T.Tags AS [GY_Videos.Tags],
            T.Location AS [GY_Videos.Location],
            T.VideoSetID AS [GY_Videos.VideoSetID],
            T.VideoCategoryID AS [GY_Videos.VideoCategoryID],
            T.LocalVideoURL AS [GY_Videos.LocalVideoURL],
            T.WebVideoURL AS [GY_Videos.WebVideoURL],
            T.ShowWebVideo AS [GY_Videos.ShowWebVideo],
            T.FileID AS [GY_Videos.FileID],
            T.Length AS [GY_Videos.Length],
            T.LikesCount AS [GY_Videos.LikesCount],
            T.DislikesCount AS [GY_Videos.DislikesCount],
            T.ImageID AS [GY_Videos.ImageID],
            T.Locale AS [GY_Videos.Locale],
            True AS _from0
        FROM GalleryModelStoreContainer.GY_Videos AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for GalleryEntities.GY_VideoSet.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView23()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing GY_VideoSet
        [GalleryModel.GY_VideoSet](T1.[GY_VideoSet.VideoSetID], T1.[GY_VideoSet.Title], T1.[GY_VideoSet.Description], T1.[GY_VideoSet.Hide], T1.[GY_VideoSet.AddedOn], T1.[GY_VideoSet.TakenOn], T1.[GY_VideoSet.Tags], T1.[GY_VideoSet.Location], T1.[GY_VideoSet.VideoCategoryID], T1.[GY_VideoSet.ImageID], T1.[GY_VideoSet.Locale])
    FROM (
        SELECT
            T.VideoSetID AS [GY_VideoSet.VideoSetID],
            T.Title AS [GY_VideoSet.Title],
            T.Description AS [GY_VideoSet.Description],
            T.Hide AS [GY_VideoSet.Hide],
            T.AddedOn AS [GY_VideoSet.AddedOn],
            T.TakenOn AS [GY_VideoSet.TakenOn],
            T.Tags AS [GY_VideoSet.Tags],
            T.Location AS [GY_VideoSet.Location],
            T.VideoCategoryID AS [GY_VideoSet.VideoCategoryID],
            T.ImageID AS [GY_VideoSet.ImageID],
            T.Locale AS [GY_VideoSet.Locale],
            True AS _from0
        FROM GalleryModelStoreContainer.GY_VideoSet AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for GalleryEntities.GY_AudioCategories.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView24()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing GY_AudioCategories
        [GalleryModel.GY_AudioCategories](T1.[GY_AudioCategories.AudioCategoryID], T1.[GY_AudioCategories.Title], T1.[GY_AudioCategories.Description], T1.[GY_AudioCategories.Hide], T1.[GY_AudioCategories.ImageID], T1.[GY_AudioCategories.Locale], T1.[GY_AudioCategories.ParentAudioCategoryID])
    FROM (
        SELECT
            T.AudioCategoryID AS [GY_AudioCategories.AudioCategoryID],
            T.Title AS [GY_AudioCategories.Title],
            T.Description AS [GY_AudioCategories.Description],
            T.Hide AS [GY_AudioCategories.Hide],
            T.ImageID AS [GY_AudioCategories.ImageID],
            T.Locale AS [GY_AudioCategories.Locale],
            T.ParentAudioCategoryID AS [GY_AudioCategories.ParentAudioCategoryID],
            True AS _from0
        FROM GalleryModelStoreContainer.GY_AudioCategories AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for GalleryEntities.GY_VideoCategories.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView25()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing GY_VideoCategories
        [GalleryModel.GY_VideoCategories](T1.[GY_VideoCategories.VideoCategoryID], T1.[GY_VideoCategories.Title], T1.[GY_VideoCategories.Description], T1.[GY_VideoCategories.Hide], T1.[GY_VideoCategories.ImageID], T1.[GY_VideoCategories.Locale], T1.[GY_VideoCategories.ParentVideoCategoryID])
    FROM (
        SELECT
            T.VideoCategoryID AS [GY_VideoCategories.VideoCategoryID],
            T.Title AS [GY_VideoCategories.Title],
            T.Description AS [GY_VideoCategories.Description],
            T.Hide AS [GY_VideoCategories.Hide],
            T.ImageID AS [GY_VideoCategories.ImageID],
            T.Locale AS [GY_VideoCategories.Locale],
            T.ParentVideoCategoryID AS [GY_VideoCategories.ParentVideoCategoryID],
            True AS _from0
        FROM GalleryModelStoreContainer.GY_VideoCategories AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for GalleryModelStoreContainer.GY_LayerProperties.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView26()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing GY_LayerProperties
        [GalleryModel.Store.GY_LayerProperties](T1.[GY_LayerProperties.LayerPropertyID], T1.[GY_LayerProperties.LayerID], T1.[GY_LayerProperties.Attribute], T1.[GY_LayerProperties.Value])
    FROM (
        SELECT
            T.LayerPropertyID AS [GY_LayerProperties.LayerPropertyID],
            T.LayerID AS [GY_LayerProperties.LayerID],
            T.Attribute AS [GY_LayerProperties.Attribute],
            T.[Value] AS [GY_LayerProperties.Value],
            True AS _from0
        FROM GalleryEntities.GY_LayerProperties AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for GalleryModelStoreContainer.GY_Layers.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView27()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing GY_Layers
        [GalleryModel.Store.GY_Layers](T1.[GY_Layers.LayerID], T1.[GY_Layers.SlideID], T1.[GY_Layers.LayerContentType], T1.[GY_Layers.LayerContent], T1.[GY_Layers.Title], T1.[GY_Layers.Hide])
    FROM (
        SELECT
            T.LayerID AS [GY_Layers.LayerID],
            T.SlideID AS [GY_Layers.SlideID],
            T.LayerContentType AS [GY_Layers.LayerContentType],
            T.LayerContent AS [GY_Layers.LayerContent],
            T.Title AS [GY_Layers.Title],
            T.Hide AS [GY_Layers.Hide],
            True AS _from0
        FROM GalleryEntities.GY_Layers AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for GalleryModelStoreContainer.GY_SlideProperties.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView28()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing GY_SlideProperties
        [GalleryModel.Store.GY_SlideProperties](T1.[GY_SlideProperties.SlidePropertyID], T1.[GY_SlideProperties.SlideID], T1.[GY_SlideProperties.Attribute], T1.[GY_SlideProperties.Value], T1.[GY_SlideProperties.IsImageProperty])
    FROM (
        SELECT
            T.SlidePropertyID AS [GY_SlideProperties.SlidePropertyID],
            T.SlideID AS [GY_SlideProperties.SlideID],
            T.Attribute AS [GY_SlideProperties.Attribute],
            T.[Value] AS [GY_SlideProperties.Value],
            T.IsImageProperty AS [GY_SlideProperties.IsImageProperty],
            True AS _from0
        FROM GalleryEntities.GY_SlideProperties AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for GalleryModelStoreContainer.GY_Slides.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView29()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing GY_Slides
        [GalleryModel.Store.GY_Slides](T1.[GY_Slides.SlideID], T1.[GY_Slides.Title], T1.[GY_Slides.Position], T1.[GY_Slides.BGImageURL], T1.[GY_Slides.BGImageThumbURL], T1.[GY_Slides.BGImageDummyURL], T1.[GY_Slides.Hide])
    FROM (
        SELECT
            T.SlideID AS [GY_Slides.SlideID],
            T.Title AS [GY_Slides.Title],
            T.Position AS [GY_Slides.Position],
            T.BGImageURL AS [GY_Slides.BGImageURL],
            T.BGImageThumbURL AS [GY_Slides.BGImageThumbURL],
            T.BGImageDummyURL AS [GY_Slides.BGImageDummyURL],
            T.Hide AS [GY_Slides.Hide],
            True AS _from0
        FROM GalleryEntities.GY_Slides AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for GalleryEntities.GY_LayerProperties.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView30()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing GY_LayerProperties
        [GalleryModel.GY_LayerProperties](T1.[GY_LayerProperties.LayerPropertyID], T1.[GY_LayerProperties.LayerID], T1.[GY_LayerProperties.Attribute], T1.[GY_LayerProperties.Value])
    FROM (
        SELECT
            T.LayerPropertyID AS [GY_LayerProperties.LayerPropertyID],
            T.LayerID AS [GY_LayerProperties.LayerID],
            T.Attribute AS [GY_LayerProperties.Attribute],
            T.[Value] AS [GY_LayerProperties.Value],
            True AS _from0
        FROM GalleryModelStoreContainer.GY_LayerProperties AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for GalleryEntities.GY_Layers.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView31()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing GY_Layers
        [GalleryModel.GY_Layers](T1.[GY_Layers.LayerID], T1.[GY_Layers.SlideID], T1.[GY_Layers.LayerContentType], T1.[GY_Layers.LayerContent], T1.[GY_Layers.Title], T1.[GY_Layers.Hide])
    FROM (
        SELECT
            T.LayerID AS [GY_Layers.LayerID],
            T.SlideID AS [GY_Layers.SlideID],
            T.LayerContentType AS [GY_Layers.LayerContentType],
            T.LayerContent AS [GY_Layers.LayerContent],
            T.Title AS [GY_Layers.Title],
            T.Hide AS [GY_Layers.Hide],
            True AS _from0
        FROM GalleryModelStoreContainer.GY_Layers AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for GalleryEntities.GY_SlideProperties.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView32()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing GY_SlideProperties
        [GalleryModel.GY_SlideProperties](T1.[GY_SlideProperties.SlidePropertyID], T1.[GY_SlideProperties.SlideID], T1.[GY_SlideProperties.Attribute], T1.[GY_SlideProperties.Value], T1.[GY_SlideProperties.IsImageProperty])
    FROM (
        SELECT
            T.SlidePropertyID AS [GY_SlideProperties.SlidePropertyID],
            T.SlideID AS [GY_SlideProperties.SlideID],
            T.Attribute AS [GY_SlideProperties.Attribute],
            T.[Value] AS [GY_SlideProperties.Value],
            T.IsImageProperty AS [GY_SlideProperties.IsImageProperty],
            True AS _from0
        FROM GalleryModelStoreContainer.GY_SlideProperties AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for GalleryEntities.GY_Slides.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView33()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing GY_Slides
        [GalleryModel.GY_Slides](T1.[GY_Slides.SlideID], T1.[GY_Slides.Title], T1.[GY_Slides.Position], T1.[GY_Slides.BGImageURL], T1.[GY_Slides.BGImageThumbURL], T1.[GY_Slides.BGImageDummyURL], T1.[GY_Slides.Hide])
    FROM (
        SELECT
            T.SlideID AS [GY_Slides.SlideID],
            T.Title AS [GY_Slides.Title],
            T.Position AS [GY_Slides.Position],
            T.BGImageURL AS [GY_Slides.BGImageURL],
            T.BGImageThumbURL AS [GY_Slides.BGImageThumbURL],
            T.BGImageDummyURL AS [GY_Slides.BGImageDummyURL],
            T.Hide AS [GY_Slides.Hide],
            True AS _from0
        FROM GalleryModelStoreContainer.GY_Slides AS T
    ) AS T1");
        }
    }
}